require 'brl/genboree/tools/reasoner/reasonerRulesHelper'

module BRL; module Genboree; module Tools;
  class ReasonerV2a1RulesHelper < ReasonerRulesHelper
    TOOL_ID = "reasonerV2a1"

    # @see http://genboree.org/REST/v1/grp/myScratchForGenbreeKB/kb/kbScratch/coll/GuidelineRulesMetaRules_0.1/doc/ACMG2015-Guidelines
    def getRulesModel
      model = %Q@{"name":"GuideLines_V0_2","required":true,"domain":"regexp([A-Za-z0-9]+-Guidelines)","description":"For example, ACMG OR McArthurLabGuideLines","unique":true,"identifier":true,"properties":[{"name":"Rules","items":[{"name":"Rule","required":true,"category":true,"domain":"string","description":"A rule item / sub-doc / record)","unique":true,"identifier":true,"properties":[{"name":"Conditions","items":[{"name":"Condition","required":true,"domain":"string","description":"A condition item / sub-doc / record","unique":true,"identifier":true,"properties":[{"name":"PartitionPath","required":true,"domain":"string","description":"What partition does this condition examine? Period-delimited path [of keys] in the partitioned \\"data\\" section of the partitioning transformation output."},{"name":"Condition","required":true,"domain":"regexp(^[>,=]=\\\\d)","description":"What is the conditional test applied to the value for PartitionPath? A string encoding a simple conditional test for the value in that partition"},{"name":"AggregationOperation","domain":"enum(sum, count, value)","description":"How to aggregate multiple values when coming up with the value for PartitionPath, if ParttionPath does not point to a \\"leaf\\" or final value, but rather to a partition that has multiple values (i.e. it indicates a whole \\"column\\" which thus can have multiple values, yes?)"}]}],"fixed":true,"required":true,"domain":"[valueless]","description":"The list of conditions for this rule. Each rule has 1+ conditions to test."},{"name":"Inference","required":true,"domain":"string","description":"The inference if all the Conditions are met."}]}],"fixed":true,"domain":"[valueless]","description":"Contains 1+ Rule items (rule record or rule sub-doc)"},{"name":"MetaRules","items":[{"name":"MetaRule","domain":"string","description":"enumerate the metarules","unique":true,"identifier":true,"properties":[{"name":"NumberOfAssertions","required":true,"domain":"posInt","description":"How many unique assertion for this final call"},{"name":"UniqueAssertions","items":[{"name":"UniqueAssertion","required":true,"domain":"string","description":"list assertions here","unique":true,"identifier":true}],"fixed":true,"category":true,"domain":"[valueless]"},{"name":"Inference","required":true,"domain":"string","description":"what is the calls when assertion are matched with above values"},{"name":"Explanation","required":true,"domain":"string","description":"Text explaining meta rules"}]}],"fixed":true,"category":true,"domain":"[valueless]"}]}@
    end
  end
end; end; end
