#######################################################################
# INPUT RELATED PARAMS
#######################################################################
# Where is the  results file?
input.dir.blatResults                          = /home/po4b/brl/andrewj/Am.read2contigMapping.15-7-2003/comparisonData/bin_r_999/bacEndsVsContigs/blat
# What is the unix file pattern of the files to process.
input.filePattern.blatFiles                    = all.blatHits.psl.gz
#######################################################################
# OUTPUT RELATED PARAMS
#######################################################################
# Where to write the results?
output.dir.outputDir                            = /home/po4b/brl/andrewj/Am.read2contigMapping.15-7-2003/comparisonData/bin_r_999/bacEndsVsContigs/blat/mappings
# What are the output file names? The .psl.gz extension will be added.
output.file.mapResultsBase                     = bacEnds.mappedTo.AmBin_r_999
# Do you want the alignment score output at the end of each hit? (extra column...not strict psl anymore)
output.alignScore                              = 1
# Do you want the whole query mapped to the target?
# This will extrapolate the location of the 1st and last base of the query on the target
# using the top hit. Small hits can thus 'map' large queries. Be careful.
output.doMapWholeRead                          = 1
#######################################################################
# PROCESSING-RELATED PARAMS
#######################################################################
# Do you want the 'score' to be a calculated alignment score you control?
# If not it won't be calculated or used in any way.
param.doCalcAlignScores                           = 1
# How many points to award to a matched base? Put '' or 0 if you aren't doing alignScores.
param.alignScore.matchReward                   = 2
# How many points to deduct to a mis-matchdd base? Put '' or 0 if you aren't doing alignScores.
param.alignScore.mismatchPenalty               = 1
# How many points to deduct for opening a QUERY gap?
# (i.e. for the first base of a query gap)
# Put '' or 0 if you aren't doing alignScores.
param.alignScore.gapOpenPenalty                = 2
# How many points to deduct for every base in a QUERY gap, after the first?
# Put '' or 0 if you aren't doing alignScores.
param.alignScore.gapExtensionPenalty           = 1

#######################################################################
# HIT FILTER-RELATED PARAMS
#######################################################################
# What is the minimum alignment score, if you enabled that option?
param.hitFilter.minAlignScore                  = 0
# What is the minimum number of matches?
param.hitFilter.minNumIdentities               = 100
# What is the minimum % query-identity.
# Allow for low-qual windows and any X-screened vector.
param.hitFilter.minPercentOfQueryMatching      = 35
# What is the minimum query length you will consider?
param.hitFilter.minQueryLength                 = 200
# What is the maximum % of the hit that is gap-bases?
# This is determined by: numQueryGapBases / (queryEnd - queryStart)
# eg. 5 means 5%.
param.hitFilter.maxPercentQueryGaps            = 5
# What is the maximum % of the hit that is gap-bases?
# This is determined by: numTargetGapBases / (targetEnd - targetStart)
# eg. 5 means 5%.
param.hitFilter.maxPercentTargetGaps            = 5
#######################################################################
# EQUIVALENCE CLASS-BASED FILTERING PARAMS
#######################################################################
# Should we use the alignScore for Equivalence Class filtering?
# If you don't, then simple number of matches will be used.
param.mapFilter.useAlignScore                  = 1
# What is the minimum similarity to the BEST hit that is still within the Equivalence Class.
# eg. '5' means that the Equivalence Class is the set of all filtered hits that have
# scores within 5% of the top hit.
param.mapFilter.keepPercent                    = 5
# What is the maximum size of the Equivalence Class?
# i.e. if there are too many 'good hits' in the Equivalence Class, the query maps
# ambiguously and will be eliminated. This is sort of like "top k matches" that actually makes sense.
param.mapFilter.maxHitsPerQuery                = 3
# How many top hits from the Equivalence Class do you want to keep?
# Only this number of very best hits from the Equivalence Class are output.
# Typically this is the same as the above parameter, although you may have special cases in mind.
param.mapFilter.keepKhits                      = 4
# Do you want to remove hits that cover too much of the target?
# i.e. ones that contain perhaps ridiculous gaps and spread a read over 100,000's of bases?
param.doExcessiveCoverageFilter                = 1
# If so, what is the maximum number of target bases the query can cover
# in the target...this is the sum of all bases covered by all filtered hits,
# plus an optional radius for each mapping.
param.excessiveCoverage                        = 1000000
# When calculative coverage, add this value to each end of each hit (for whatever reason)
param.coverageRadius                           = 75000
# Do you want to identify target regions that have too many 'projects' (Bacs, pools, whatever the project name means)
# mapping to them?
param.doFilterTargetsByNumProjs                = 1
# How is a project name extracted from the query name? Provide a perl/ruby regular expression here.
param.projRegExp															 = /^(\S{4,4})/
# What is the maximum number of projects hitting a given region?
param.maxNumProjsInRegion                      = 10
# How big a radius around each hit should we look of projects (what is the 'region' size for this filter?)
param.targetRegionRadius                       = 75000
