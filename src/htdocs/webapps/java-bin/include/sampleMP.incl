<%@ page import="org.genboree.editor.AnnotationDetail,
java.util.HashMap,
java.util.ArrayList,
org.genboree.samples.Sample,
org.genboree.samples.SampleHelper"%>
<%
    // initialize start and end page
    sstartPageNum = (String )mys.getAttribute("lastStartPageNum");
    if (sstartPageNum == null)
        startPageNum = 0;
    else
        startPageNum = Integer.parseInt(sstartPageNum);
    sstopPageNum =  (String)mys.getAttribute("lastEndPageNum");
    if (sstopPageNum == null)
        endPageNum = maxDisplay -1;
    else
        endPageNum = Integer.parseInt(sstopPageNum);
    if (totalSamples!= null && totalSamples.length >0) {                
    // init displayNum
        if (request.getParameter(pageDisplayNum) != null) {
             String temp = request.getParameter(pageDisplayNum);
                displayNum =   Integer.parseInt(temp);                
          
        } 
         
        if 
                ( initPage)                
            paging = true;         
       else {
            paging = false;
    
            // if display Num changed, do paging   
            String temp = (String)mys.getAttribute("displayNum");
            if (temp!=null) {
                int displayN = Integer.parseInt(temp);
                if (displayN != displayNum)
                paging = true;
            }      
            if (doPaging)
                paging = true;  
    
    if (!paging)  {
            page2objects= (HashMap )mys.getAttribute("page2Annotation");        
            String pages = (String)mys.getAttribute("numPages");
            if (pages != null)
            numPages = Integer.parseInt(pages);
            
            if (request.getParameter("currentPage") != null) {
                String indexPage  = request.getParameter("currentPage");
                
                if (indexPage != null) {
                    int tempN = Integer.parseInt(indexPage);
                    currentPageIndex = tempN;
                    if (currentPageIndex <0)
                    currentPageIndex = 0;
                    
                    if (currentPageIndex > (numPages -1))
                        currentPageIndex = numPages -1;       
                    currentPage = "" + currentPageIndex;               
                    mys.setAttribute("lastPageIndex", currentPage);               
                    if (numPages >maxDisplay) {
                        modNum  =  currentPageIndex % maxDisplay;
                        if (modNum == 0) {
                            startPageNum = currentPageIndex;
                            endPageNum = currentPageIndex + (maxDisplay-1);
                            if (endPageNum > (numPages -1))
                            endPageNum = numPages -1;
                            
                            mys.setAttribute("lastStartPageNum", "" +  startPageNum);
                            mys.setAttribute("lastEndPageNum", "" + endPageNum);
                        }    
                    }
                    else {
                        endPageNum = numPages -1;
                        startPageNum = 0;
                        mys.setAttribute("lastStartPageNum", "" +  startPageNum);
                        mys.setAttribute("lastEndPageNum", "" + endPageNum);
                    }
                }
            }
            else {
                if (mys.getAttribute("lastPageIndex")!= null)
                currentPage = (String)mys.getAttribute("lastPageIndex");                        
                }
                if (currentPage != null)
                currentPageIndex = Integer.parseInt(currentPage);               
                mys.setAttribute("lastPageIndex", currentPage);
                /// mys.setAttribute("lastEndPageNum", "" + endPageNum);
                }
    }     // not init page
        
        
    if (totalSamples != null) 
        if (paging){
            page2objects= new HashMap();
              // calculate num pages  
            numPages  = totalSamples.length /displayNum;               
            if ((totalSamples.length % displayNum) != 0)
            numPages +=1;                 
            // set page to object hashmap                     
            page2objects = SampleHelper.setHash (totalSamples, numPages, displayNum); 
            mys.setAttribute("page2Annotation", page2objects);
            mys.setAttribute("numPages", "" + numPages);
            mys.setAttribute("displayNum", "" + displayNum);
            mys.setAttribute("lastStartPageNum", "" +  startPageNum);
            mys.setAttribute("lastEndPageNum", "" + endPageNum);
            startPageNum = 0;
            endPageNum = maxDisplay -1; 
            if (maxDisplay  > numPages)
            endPageNum = numPages -1;
        
           if (request.getParameter("currentPage") != null) {
                String indexPage  = request.getParameter("currentPage");
                 if (indexPage != null) {
                    int tempN = Integer.parseInt(indexPage);
                    currentPageIndex = tempN;
                    if (currentPageIndex <0)
                        currentPageIndex = 0;
                    
                    if (currentPageIndex > (numPages -1))
                        currentPageIndex = numPages -1;   
                    
                    currentPage = "" + currentPageIndex;               
                    mys.setAttribute("lastPageIndex", currentPage  ); 
                    
                    if (numPages >maxDisplay) {
                        modNum  =  currentPageIndex % maxDisplay;
                        if (modNum == 0) {
                            startPageNum = currentPageIndex;
                            endPageNum = currentPageIndex + (maxDisplay-1);
                            if (endPageNum > (numPages -1))
                            endPageNum = numPages -1;
                            
                            mys.setAttribute("lastStartPageNum", "" +  startPageNum);
                            mys.setAttribute("lastEndPageNum", "" + endPageNum);
                        }
                        else {
                             startPageNum = (currentPageIndex/maxDisplay) * maxDisplay;
                            endPageNum = startPageNum + (maxDisplay-1);
                            if (endPageNum > (numPages -1))
                            endPageNum = numPages -1;
                            
                            mys.setAttribute("lastStartPageNum", "" +  startPageNum);
                            mys.setAttribute("lastEndPageNum", "" + endPageNum);
                         }
                        
                    }
                    else {
                        endPageNum = numPages -1;
                        startPageNum = 0;
                        mys.setAttribute("lastStartPageNum", "" +  startPageNum);
                        mys.setAttribute("lastEndPageNum", "" + endPageNum);
                    }
                  }
           }
           else {
             currentPageIndex = 0;
             currentPage = "0";    
                 mys.setAttribute("lastStartPageNum", "" +  0);     
           }
            
                                 
            mys.setAttribute("lastPageIndex", currentPage);
            mys.setAttribute("lastEndPageNum", "" + endPageNum);
        }

    String navigator =  request.getParameter("navigator") ;
    if (navigator != null) {
    if (navigator.compareTo("home") ==0) {
    currentPage = "0";
    currentPageIndex = 0;
    
    if (numPages > maxDisplay) {
    startPageNum = 0;
    endPageNum =(maxDisplay-1);
    mys.setAttribute("lastEndPageNum", "" + endPageNum);  
    }
    mys.setAttribute("lastStartPageNum", "" +  startPageNum);
    }
    else if (navigator.compareTo("last") ==0) {
    currentPageIndex = numPages -1;
    currentPage = "" + currentPageIndex ;    
    if (numPages >maxDisplay) {
    endPageNum = numPages -1;
    modNum  = endPageNum % maxDisplay;
    if (modNum!= 0)
    startPageNum = endPageNum - modNum;
    else
    startPageNum = (endPageNum/maxDisplay) * maxDisplay ;    
    mys.setAttribute("lastEndPageNum", "" + endPageNum);
    mys.setAttribute("lastStartPageNum", "" +  startPageNum);
    }
    }
    else if (navigator.compareTo("next") ==0) {               
    if (currentPageIndex < (numPages -1)) {
        currentPageIndex ++;
        currentPage = "" + currentPageIndex;
        if (numPages >maxDisplay) {
        modNum  =  currentPageIndex % maxDisplay;
        if (modNum == 0) {
        startPageNum = currentPageIndex;
        endPageNum = currentPageIndex + (maxDisplay-1);
        if (endPageNum > (numPages -1))
        endPageNum = numPages -1;
        mys.setAttribute("lastEndPageNum", "" + endPageNum);
        mys.setAttribute("lastStartPageNum", "" + startPageNum);
        }    
        }
    }
    else {
    currentPageIndex = numPages -1;
    currentPage = "" + currentPageIndex;
    endPageNum = numPages -1;
    if (endPageNum <=(maxDisplay-1))
    startPageNum =0;
    else {
    startPageNum = endPageNum - (endPageNum %maxDisplay);
    if (startPageNum == endPageNum )
    startPageNum = endPageNum -(maxDisplay-1);
    if (startPageNum <0)
    startPageNum =0;
    }
    
    mys.setAttribute("lastEndPageNum", "" + endPageNum);
    mys.setAttribute("lastStartPageNum", "" + startPageNum);
    }
     }
                   
    if (navigator.compareTo("previous") ==0) {               
    currentPageIndex --;               
    if (currentPageIndex>=0) {
    currentPage = "" + currentPageIndex;
    if (numPages >maxDisplay) {
    modNum  =  (currentPageIndex +1) % maxDisplay;
    if (modNum== 0) {
    endPageNum = currentPageIndex ;
    if (endPageNum >(maxDisplay-1))
    startPageNum = currentPageIndex -(maxDisplay-1);
    else
    startPageNum = 0;
    mys.setAttribute("lastEndPageNum", "" + endPageNum);
    mys.setAttribute("lastStartPageNum", "" + startPageNum);
    }
    }
    }
    else {
    currentPage = "0";
    currentPageIndex = 0;
    startPageNum = 0;
    endPageNum = (maxDisplay-1);
    if (endPageNum > (numPages -1))
    endPageNum = numPages -1;
    mys.setAttribute("lastEndPageNum", "" + endPageNum);
    mys.setAttribute("lastStartPageNum", "" + startPageNum);
    }               
    }          
    if (navigator.compareTo("morePages") ==0) {
    String lastEndPageNum = (String)mys.getAttribute("lastEndPageNum");
    if (lastEndPageNum != null)
    startPageNum =  Integer.parseInt(lastEndPageNum) + 1;
    if (startPageNum > (numPages -1)) {
    endPageNum = startPageNum -1;
    modNum  = endPageNum % maxDisplay;
    if (modNum!= 0)
    startPageNum = endPageNum - modNum;
    else
    startPageNum = endPageNum - (maxDisplay-1);
    }
    if (startPageNum + (maxDisplay-1) <= numPages )
    endPageNum = startPageNum + (maxDisplay-1);
    else   if (startPageNum + (maxDisplay-1) > (numPages-1)  && startPageNum < (numPages -1) )
    endPageNum = numPages -1;
    if (endPageNum > (numPages-1))
    endPageNum = (numPages-1);
    if (endPageNum < startPageNum )
    endPageNum = numPages -1;
    currentPageIndex = startPageNum;
    currentPage = "" + currentPageIndex ;
    mys.setAttribute("lastStartPageNum", "" + startPageNum);
    mys.setAttribute("lastEndPageNum", "" + endPageNum);
    }
    mys.setAttribute("lastPageIndex", currentPage);
    }                     
    if (page2objects != null)
    samples = (Sample[])page2objects.get(currentPage);
    if (samples == null){               
    page2objects.remove(currentPage);
    currentPageIndex --;
    currentPage = "" + currentPageIndex;
    if (page2objects.get(currentPage)!= null)
    samples = (Sample [] )page2objects.get(currentPage);
    else
    samples = null;
    mys.setAttribute("lastPageIndex", currentPage);
    }
    }
    else {
    samples = null;
    mys.setAttribute("lastPageIndex", "-1");
    }
    %>