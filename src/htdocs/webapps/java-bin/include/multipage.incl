<%@ page import="org.genboree.editor.AnnotationDetail,
               java.util.HashMap,
               java.util.ArrayList"%>
<%


 // initialize start and end page
   sstartPageNum = (String )mys.getAttribute("lastStartPageNum");
   if (sstartPageNum == null)
     startPageNum = 0;
   else
     startPageNum = Integer.parseInt(sstartPageNum);

   sstopPageNum =  (String)mys.getAttribute("lastEndPageNum");
   if (sstopPageNum == null)
     endPageNum = maxDisplay -1;
   else
     endPageNum = Integer.parseInt(sstopPageNum);


if (totalAnnotations != null && totalAnnotations.length >0) {
  if (request.getParameter("app") != null) {
     String temp = request.getParameter("app");
     displayNum = Integer.parseInt(temp);
  }

  if (request.getParameter("upfid")!= null) {
      initPage = true;
      paging = true;
        mys.setAttribute("totalNumAnnotations", "" + totalAnnotations.length);
 }



if (!initPage) {
  if (mys.getAttribute("totalNumAnnotations") != null) {
      String  lastTotal  = (String) mys.getAttribute("totalNumAnnotations");
      if (lastTotal != null)
          lastTotalNum = Integer.parseInt(lastTotal);
  }

  if (totalAnnotations != null && (totalAnnotations.length ==  lastTotalNum) )
      paging = false;
  else  if (totalAnnotations != null && (totalAnnotations.length !=  lastTotalNum) )
      paging = true;

  String temp = (String)mys.getAttribute("displayNum");
  if (temp!=null) {
      int displayN = Integer.parseInt(temp);
      if (displayN != displayNum)
          paging = true;
  }

  if (doPaging)
      paging = true;

  //if (!paging)

  {
      page2Annotations = (HashMap )mys.getAttribute("page2Annotation");

      String pages = (String)mys.getAttribute("numPages");
      if (pages != null)
      numPages = Integer.parseInt(pages);

      if (request.getParameter("currentPage") != null) {
        String indexPage  = request.getParameter("currentPage");
         if (indexPage != null)
          {
              int tempN = Integer.parseInt(indexPage);
              currentPageIndex = tempN;
              if (currentPageIndex <0)
              currentPageIndex = 0;
              if (currentPageIndex > (numPages -1))
              currentPageIndex = numPages -1;

              currentPage = "" + currentPageIndex;

              mys.setAttribute("lastPageIndex", currentPage);

              if (numPages >maxDisplay) {
                  modNum  =  currentPageIndex % maxDisplay;
                  if (modNum == 0) {
                      startPageNum = currentPageIndex;
                      endPageNum = currentPageIndex + (maxDisplay-1);
                      if (endPageNum > (numPages -1))
                      endPageNum = numPages -1;
                        mys.setAttribute("lastStartPageNum", "" +  startPageNum);
                      mys.setAttribute("lastEndPageNum", "" + endPageNum);
                  }
              }
              else {
                  endPageNum = numPages -1;
                  startPageNum = 0;
                   mys.setAttribute("lastStartPageNum", "" +  startPageNum);
                  mys.setAttribute("lastEndPageNum", "" + endPageNum);
              }
          }
       }
       else {
          if (mys.getAttribute("lastPageIndex")!= null)
          currentPage = (String)mys.getAttribute("lastPageIndex");
         
      }
      if (currentPage != null)
       currentPageIndex = Integer.parseInt(currentPage);

    mys.setAttribute("lastPageIndex", currentPage);
     /// mys.setAttribute("lastEndPageNum", "" + endPageNum);
  }
}     // not init page




if (totalAnnotations  != null  && paging) {
    ArrayList tempList = new ArrayList();
   for (int j=0; j<totalAnnotations.length; j++) {
      if (!totalAnnotations[j].isFlagged())
          tempList.add(totalAnnotations[j]);
  }
  totalAnnotations = (AnnotationDetail[])tempList.toArray(new AnnotationDetail[tempList.size()]);
  page2Annotations = new HashMap();
  numPages  = totalAnnotations.length /displayNum;

  if ((totalAnnotations.length % displayNum) != 0)
  numPages +=1;
  int baseIndex = 0;
  for (int k=0; k<numPages; k++) {
          baseIndex = k*displayNum;
          if ((totalAnnotations.length - k * displayNum) >= displayNum){
              AnnotationDetail [] annos = new AnnotationDetail[displayNum];
              for (int m=0; m<displayNum; m++)
              annos[m] = totalAnnotations[baseIndex+m];
              page2Annotations.put("" + k, annos);
          }
          else {
              int remainNum =  totalAnnotations.length - k * displayNum;
              if (remainNum > 0 ) {
                  AnnotationDetail [] annos = new AnnotationDetail[remainNum];
                  for (int m=0; m<remainNum; m++)
                      annos[m] = totalAnnotations[baseIndex+m];
                  page2Annotations.put("" + k, annos);
              }
          }
      }
      mys.setAttribute("page2Annotation", page2Annotations);
      mys.setAttribute("numPages", "" + numPages);
      mys.setAttribute("displayNum", "" + displayNum);
      mys.setAttribute("lastStartPageNum", "" +  startPageNum);
      mys.setAttribute("lastEndPageNum", "" + endPageNum);
      doPaging = false;
}



if (request.getParameter("upfid")!= null) {
      currentPageIndex = 0;
      currentPage = "0";
      mys.setAttribute("lastPageIndex", currentPage);
      mys.removeAttribute("lastStartPageNum");
      mys.removeAttribute("lastEndPageNum");
      mys.setAttribute("lastStartPageNum", "" +  0);
      endPageNum = maxDisplay -1;
      if (maxDisplay  > numPages)
      endPageNum = numPages -1;
      mys.setAttribute("lastEndPageNum", "" + endPageNum);
  }


String navigator =   request.getParameter("navigator") ;
  if (navigator != null) {


  if (navigator.compareTo("home") ==0) {
       currentPage = "0";
      currentPageIndex = 0;
      mys.setAttribute("lastPageIndex", currentPage);
      if (numPages >maxDisplay) {
      startPageNum = 0;
      endPageNum =(maxDisplay-1);
       mys.setAttribute("lastEndPageNum", "" + endPageNum);  }
       mys.setAttribute("lastStartPageNum", "" +  startPageNum);
  }
else if (navigator.compareTo("last") ==0) {
      currentPageIndex = numPages -1;
      currentPage = "" + currentPageIndex ;
      mys.setAttribute("lastPageIndex", currentPage);

     if (numPages >maxDisplay) {
          endPageNum = numPages -1;
           modNum  = endPageNum % maxDisplay;
          if (modNum!= 0)
          startPageNum = endPageNum - modNum;
          else
          startPageNum = (endPageNum/maxDisplay) * maxDisplay ;

           mys.setAttribute("lastEndPageNum", "" + endPageNum);
           mys.setAttribute("lastStartPageNum", "" +  startPageNum);
     }
}
else if (navigator.compareTo("next") ==0) {

       if (currentPageIndex < (numPages -1)) {
          currentPageIndex ++;
           currentPage = "" + currentPageIndex;
         mys.setAttribute("lastPageIndex", currentPage);
          if (numPages >maxDisplay) {
                  modNum  =  currentPageIndex % maxDisplay;
                  if (modNum == 0) {
                      startPageNum = currentPageIndex;
                      endPageNum = currentPageIndex + (maxDisplay-1);
                      if (endPageNum > (numPages -1))
                          endPageNum = numPages -1;
                      mys.setAttribute("lastEndPageNum", "" + endPageNum);
                      mys.setAttribute("lastStartPageNum", "" + startPageNum);
                  }

          }
      }
      else {
          currentPageIndex = numPages -1;
          currentPage = "" + currentPageIndex;
          mys.setAttribute("lastPageIndex", currentPage);
          endPageNum = numPages -1;
          if (endPageNum <=(maxDisplay-1))
              startPageNum =0;
          else {
              startPageNum = endPageNum - (endPageNum %maxDisplay);
              if (startPageNum == endPageNum )
                  startPageNum = endPageNum -(maxDisplay-1);
              if (startPageNum <0)
              startPageNum =0;
          }

          mys.setAttribute("lastEndPageNum", "" + endPageNum);
          mys.setAttribute("lastStartPageNum", "" + startPageNum);

      }


  }
 if (navigator.compareTo("previous") ==0) {

       currentPageIndex --;

       if (currentPageIndex>=0) {
          currentPage = "" + currentPageIndex;
           mys.setAttribute("lastPageIndex", currentPage);
          if (numPages >maxDisplay) {
               modNum  =  (currentPageIndex +1) % maxDisplay;
              if (modNum== 0) {
                  endPageNum = currentPageIndex ;
                  if (endPageNum >(maxDisplay-1))
                      startPageNum = currentPageIndex -(maxDisplay-1);
                  else
                      startPageNum = 0;
                  mys.setAttribute("lastEndPageNum", "" + endPageNum);
                  mys.setAttribute("lastStartPageNum", "" + startPageNum);
              }
          }
      }
      else {
          currentPage = "0";
          currentPageIndex = 0;
          mys.setAttribute("lastPageIndex", currentPage);
          startPageNum = 0;
          endPageNum = (maxDisplay-1);
          if (endPageNum > (numPages -1))
              endPageNum = numPages -1;
              mys.setAttribute("lastEndPageNum", "" + endPageNum);
            mys.setAttribute("lastStartPageNum", "" + startPageNum);
      }

  }


  if (navigator.compareTo("morePages") ==0) {
              String lastEndPageNum = (String)mys.getAttribute("lastEndPageNum");

              if (lastEndPageNum != null)
                  startPageNum =  Integer.parseInt(lastEndPageNum) + 1;

              if (startPageNum > (numPages -1)) {
                  endPageNum = startPageNum -1;
                  modNum  = endPageNum % maxDisplay;
                  if (modNum!= 0)
                  startPageNum = endPageNum - modNum;
                  else
                  startPageNum = endPageNum - (maxDisplay-1);

              }


              if (startPageNum + (maxDisplay-1) <= numPages )
                  endPageNum = startPageNum + (maxDisplay-1);
              else   if (startPageNum + (maxDisplay-1) > (numPages-1)  && startPageNum < (numPages -1) )
                  endPageNum = numPages -1;

              if (endPageNum > (numPages-1))
                  endPageNum = (numPages-1);

              if (endPageNum < startPageNum )
                  endPageNum = numPages -1;


              currentPageIndex = startPageNum;
              currentPage = "" + currentPageIndex ;

               mys.setAttribute("lastPageIndex", currentPage);

               mys.setAttribute("lastStartPageNum", "" + startPageNum);
              mys.setAttribute("lastEndPageNum", "" + endPageNum);
      }
  }

  if (page2Annotations != null)
  annotations = (AnnotationDetail [] )page2Annotations.get(currentPage);
 
  if (annotations == null)
  {

   page2Annotations.remove(currentPage);
   currentPageIndex --;

   currentPage = "" + currentPageIndex;
   if (page2Annotations.get(currentPage)!= null)
       annotations = (AnnotationDetail [] )page2Annotations.get(currentPage);
   else
      annotations = null;
         mys.setAttribute("lastPageIndex", currentPage);
  }
}
else {
annotations = null;
mys.setAttribute("lastPageIndex", "-1");
}

%>
