<%
  require 'brl/genboree/rest/wrapperApiCaller'
  require 'brl/genboree/rest/helpers/databaseApiUriHelper'
  require 'brl/genboree/rest/helpers/classApiUriHelper'
  require 'brl/genboree/rest/helpers/trackApiUriHelper'
  require 'brl/genboree/rest/helpers/trackEntityListApiUriHelper'
  require "brl/db/dbrc"
  require 'uri'
  require 'json'
  width = (@hasAccess ? 500 : 320)
  height = (@hasAccess ? 300 : 320)
  formTag = "<form id=\"wbDialogForm\" name=\"wbDialogForm\" action=\"wbDefault\" style=\"width: #{width}px; height: #{height}px;\" onsubmit=\"return submitToolJob(this);\" method=\"POST\" class=\"wbDialog wbForm\" >"
%>
<%= formTag %>

<%# Tool Title %>
<%= renderStaticFrag(@toolIdStr, :wbToolTitle) %>
<%
  if(@hasAccess)
%>
<%# Overview text %>
<%=
    renderStaticFrag(@toolIdStr, :wbToolOverview,
    { :toolOverview =>
      "
        This tool allows removing one or more tracks from an existing track entity list.
        <br>&nbsp;<br>
      "
    })
%>
<%# Input data help %>
<%
  # We need the all the tracks in a hash
  trkHash = {}
  trkELApiHelper = BRL::Genboree::REST::Helpers::TrackEntityListApiUriHelper.new()
  dbUri = URI.parse(@inputs[0])
  apiCaller = WrapperApiCaller.new(dbUri.host, "#{dbUri.path}", @context['userId'])
  apiCaller.initInternalRequest(@rackEnv, @genbConf.machineNameAlias) if(@rackEnv)
  apiCaller.get()
  resp = apiCaller.respBody()
  retVal = JSON.parse(resp)
  tracks = retVal['data']
  tracks.each {|track|
    trkHash[track['url']] = true
  }
%>
<%=
  renderFrag(@toolIdStr, :wbDialogSection,
  {
    :sectionTitle => "Input Tracks:",
    :sectionHtml =>
      renderFrag(@toolIdStr, :wbMultiSelectInputList, { :multiSelectInputHash => trkHash, :label => "Choose tracks to remove", :type => "tracks" } )
  })
%>

<%= renderStaticFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :submit, :value => 'Remove' }, { :type => :cancel} ]
      })
%>
</form>
<script type="text/javascript">
</script>
<%
  else
%>
<%= renderFrag(@toolIdStr, :wbToolHelpOverview,
      { :toolHelpOverview =>
        "
          <img src='/images/workbench/underConstruction_wikipedia_free_74x64.png' style='float:left; padding: 0px 4px 10px 4px; width:74px; height:64px;'>
          <div style='float: left; width: 288px; margin-top: 10px ; color: red;'>This tool is currently in review. Thus, the tool is currently only available to the authors, testers, and reviewers.</div>
          <span style='color: red;'>Prototype will be made available for evaluation when ready.</span>
        "
      })
  %>
  <%# Cancel Button %>
  <%= renderFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :cancel} ]
      })
  %>
</form>
<%
  end
%>
