<%# RENDER HTML %>
<%
  require 'brl/genboree/rest/helpers/databaseApiUriHelper'
  require 'brl/genboree/rest/helpers/trackApiUriHelper'
  require 'brl/genboree/rest/helpers/trackEntityListApiUriHelper'
  require 'brl/genboree/genboreeUtil'
  require 'brl/genboree/graphics/newickTrackListHelper'
  require 'brl/genboree/rest/wrapperApiCaller'
  width = (@hasAccess ? 500 : 320)
  height = (@hasAccess ? 425 : 320)
  formTag = "<form id=\"wbDialogForm\" name=\"wbDialogForm\" action=\"wbDefault\" style=\"width: #{width}px; height: #{height}px;\" onsubmit=\"return submitToolJob(this);\" method=\"POST\" class=\"wbDialog wbForm\" >"
%>
  <%= formTag %>
  <%# Tool Title %>
  <%= renderStaticFrag(@toolIdStr, :wbToolTitle) %>
  <%# Overview text %>
<%
  if(@hasAccess)
%>
  <%= renderStaticFrag(@toolIdStr, :wbToolOverview,
      { :toolOverview =>
        "
          <p>This tools creates complementary track lists from a newick tree with tracks as leaves. The leaves selected by the user are put into one tracklist while
          the remaining (unselected) leaves in the tree form the second track list.</p>

          <p>The Newick tree file is typically generated by the Heatmap tool, but in theory could come from any source that links a leaf-to-track map to the Netwick file.</p>

          <p>To set up the trackList creation:</p>



        Populate <strong>Input Data</strong>
          <ul>
          <li>Drag the newick tree file into <strong>Input Data</strong>. If created by the heatmap tool, this file will also point to a track mapping file so that the origins of the tracks in the newick tree can be determined.
          </li>
          </ul>


        Populate <strong>Output Targets</strong>
          <ul>
          <li>Drag a database into <strong>Output Targets</strong> (the track lists will be created in this database)</li>
          </ul>


        Configure &#38; Create track lists
          <ul>
          <li>Select: <code>Epigenome</code> &raquo; <code>Create track lists from Newick Tree</code></li>
            <li>In the displayed textual tree, choose the lines that correspond to the leaves you want to select. Atleast one leaf must be left unselected and atleast one leaf must be selected.</li>
            <li>Enter names for the tracklist with selected leaves(tracks) and the tracklist with the remaining leaves</li>
            <li>Click <code>Submit</code></li>
          </ul>
          <p>The track lists will be created in the designated database.</p>
        "
      })
  %>

   <%= renderFrag(@toolIdStr, :wbDialogSection,
      {
       :sectionTitle => "Input Newick File:",
       :sectionHtml => renderFrag(@toolIdStr, :wbMixedListSummary, { :list => @inputs } )
      })
  %>
  <%= renderFrag(@toolIdStr, :wbDialogSection,
        {
          :sectionTitle => "Output Database:",
          :sectionHtml =>
            renderFrag(@toolIdStr, :wbProjectOrDatabaseListSummary, { :projectOrDatabaseList => @outputs, :label => "Database Of Interest" } )
        })
  %>
  <%# Special info message %>
  <%
    #newickFileInput = @inputs[0]
    #  nameMap = @inputs[1]
    #  uriMap = @inputs[2]
    #  newickTree = @inputs[3]
      newickFileInput = @inputs.first
      apiCaller = BRL::Genboree::REST::WrapperApiCaller.new("","",@context['userId'])
      apiCaller.initInternalRequest(@rackEnv, @genbConf.machineNameAlias) if(@rackEnv)
      result = BRL::Genboree::Graphics::NewickTrackListHelper.getNewickTree(newickFileInput,apiCaller)
      newickTree = result[:tree]


      asciiTree = BRL::Genboree::Graphics::NewickTrackListHelper.getAsciiNewickTree(newickTree)
      result = BRL::Genboree::Graphics::NewickTrackListHelper.createSelectList(asciiTree[:tree])
      @selectList = result[:selectList]

  %>
  <%=
  widgets = [
      { :id => 'multiSelectNewick', :multiSelect => true, :toggleAllButton => true, :labelWidth => "100px", :label => 'Tree', :size => @selectList.length , :width => "auto;", :type => :selectWithToggle, :style=> "font:11px monospace;overflow:auto;", :title => "Select the tool(s) you want to generate the report for",
              :options => @selectList
            },
      {  :id => 'selectListName', :label => 'Entity List Name for Selected tracks', :type => :text, :size => "25", :title => "Name of the track entity list for the selected tracks"},
        {  :id => 'restListName', :label => 'Entity List Name for the remaining tracks', :type => :text, :size => "25", :title => "Name of the track entity list for the rest of the tracks"}
    ]
  WorkbenchFormHelper.addToFormContext({"validCount" => result[:count]})
    #widgets = [
    #  { :id => 'tree',  :multiSelect => true, :toggleAllButton => true, :labelWidth => "100px", :label => 'Tree', :size => @asciiTree[:selectList].length , :width => @asciiTree[:width], :type => :selectWithToggle, :style=> "font:11px monospace", :title => "Select the tool(s) you want to generate the report for",
    #          :options => @asciiTree[:selectList]
    #        }
    #]
    # Add resolution if roi has not been dragged

    renderFrag(@toolIdStr, :wbToolSettingsUI,
    {
      :sectionTitle => "Settings",
      :widgets => widgets

    })
  %>

  <%= renderStaticFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :submit, :onClick => "tallySelections();" }, { :type => :cancel} ]
      })
  %>
</form>
<%= WorkbenchFormHelper.renderInlineScriptFrag(["#{@genbConf.cacheDirBasePath}/javaScripts/progressUpload.js", "#{@genbConf.toolViewRoot}/uploadDbFile/uis/UploadDbFile.js"]) if(@inputs.size == 0) %>
<script type="text/javascript">
  function tallySelections() {
    selectList = document.getElementById("multiSelectNewick");
    selectOpts = selectList.selectedOptions
    validOpts = []
    for (i=0;i<=selectOpts.length-1;i++) {
      if (selectOpts[i].value.match(/\S/)) {
        validOpts.push(selectOpts[i].value);
      }
    }

    wbFormSettings.set("selectedLeaves",validOpts);
  }
</script>

<%
  end # if(@hasAccess)
%>
