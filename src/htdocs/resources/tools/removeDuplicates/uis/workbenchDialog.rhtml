<%# RENDER HTML %>
<%
    require 'brl/genboree/rest/helpers/databaseApiUriHelper'
    require 'brl/genboree/rest/helpers/fileApiUriHelper'
    require 'brl/genboree/rest/wrapperApiCaller'
    require 'uri'
    require 'json'
    width = (@hasAccess ? 500 : 320)
    height = (@hasAccess ? 425 : 320)
    if(@inputs.size == 0)
      formTag = "<form id=\"wbDialogForm\" name=\"wbDialogForm\" action=\"wbDefault\" style=\"width: #{width}px; height: #{height}px;\" onsubmit=\"return UploadDbFile.submitJob(this) ; \" method=\"POST\" class=\"wbDialog wbForm\" enctype=\"multipart/form-data\">"
    else
      formTag = "<form id=\"wbDialogForm\" name=\"wbDialogForm\" action=\"wbDefault\" style=\"width: #{width}px; height: #{height}px;\" onsubmit=\"return submitToolJob(this);\" method=\"POST\" class=\"wbDialog wbForm\" >"
    end
%>
  <%= formTag %>
  <%# Tool Title %>
  <%= renderStaticFrag(@toolIdStr, :wbToolTitle) %>
<%
  if(@hasAccess)
%>
  <%# Overview text %>
  <%= renderStaticFrag(@toolIdStr, :wbToolOverview,
      { :toolOverview =>
        "
          This tool allows you to remove clonal duplicates from a <a href=http://samtools.sourceforge.net/SAM1.pdf>BAM/SAM</a> file using <a href=\"http://picard.sourceforge.net/\"><i>Picard</i></a>.
          In addition, you also have the option of removing any non-unique mappings in the resultant BAM/SAM file after the <i>Picard</i> run.
          <br>&nbsp;<br>
          The target folder will contain the following output files:
          <ul>
            <li>the resultant BAM/SAM file</li>
          </ul>
          and optionally, if 'Remove Clonal Duplicates' was checked:
          <ul>
            <li>Picard.metrics: A metrics file generated by Picard</li>
            <li>Picard.err.zip: A log file from the Picard run</li>
          </ul>
          <br>&nbsp;<br>
          Note that the final resultant file will be of the same format as the input file. However, for SAM files, the file will be zipped.
          <br>&nbsp;<br>
        "
      })
  %>
  <%# Input resource summary %>
  <%=
    renderFrag(@toolIdStr, :wbDialogSection,
    {
      :sectionTitle => "Input Data:",
      :sectionHtml =>
        renderFrag(@toolIdStr, :wbTrackOrFileListSummary, { :trackOrFileList => @inputs, :label => "BAM/SAM File" } )
    })
  %>
  <%# Output summary %>
  <%=
      # Output could be a db or a folder. Render accordingly
      fileApiHelper = BRL::Genboree::REST::Helpers::FileApiUriHelper.new()
      if(fileApiHelper.subdir(@outputs[0]) == '/') # The use either dragged a db or 'Files'
        renderFrag(@toolIdStr, :wbDialogSection,
        {
          :sectionTitle => "Output Location:",
          :sectionHtml => renderFrag(@toolIdStr, :wbDatabaseListSummary, { :databaseList => @outputs } )
        })
      else # The user dragged a folder
        renderFrag(@toolIdStr, :wbDialogSection,
        {
          :sectionTitle => "Output Location:",
          :sectionHtml => renderFrag(@toolIdStr, :wbFileDirSummary, { :fileList => @outputs } )
        })
      end
  %>
  <%# Tool-specific UI widgets user provides/reviews %>
  <%=
    widgets1 = []
    if(@inputs.size == 0)
        widgets1 =
                  [
                    { :id => 'wbContext', :type => :hidden },
                    { :id => 'uploadFile', :label => 'Select File', :type => :file },
                    { :id => 'subdirs', :type => :text , :value => "Raw Data Files", :hidden => true }
                  ]
    end
    widgets2 =
            [
              { :id => 'resultFileBaseName', :label => 'Result File Base Name', :type => :text, :value => "", :title => "Base name for the resultant BAM/SAM file. The suffix '.bam' or '.sam' will be added to this name depending on the format of the input file."},
              { :id => 'removeDuplicates', :label => 'Remove Clonal Duplicates', :type => :checkbox, :checked => true, :title => "Removes mappings that appear to be due to clonal duplicates, using Picard."},
              { :id => 'keepUniqueMappings', :label => 'Keep Only Unique Mappings', :type => :checkbox, :checked => true, :title => "If checked, any read which has been mapped to more than one location will be removed. This will leave only the uniquely mapped reads for downstream analysis."},
              { :id => 'advancedSettings', :type => :advancedSection,
                :width => '450px',
                :text => '(The default values for these settings are what will be used if you do not change them.)',
                :widgets =>
                [
                  { :id => 'removeSecondaryMappings', :label => 'Remove Secondary Mappings', :labelStyle => 'width:300px;', :type => :checkbox, :title => "If checked, all secondary (sub-optimal) mappings will be removed."},
                ]
              }
            ]
    widgets = widgets1 + widgets2
    renderFrag(@toolIdStr, :wbToolSettingsUI,
    {
      :sectionTitle => "Settings",
      :widgets => widgets
    })
  %>
  <%= renderStaticFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :submit }, { :type => :cancel} ]
      })
  %>
</form>
<%= WorkbenchFormHelper.renderInlineScriptFrag(["#{@genbConf.cacheDirBasePath}/javaScripts/progressUpload.js", "#{@genbConf.toolViewRoot}/uploadDbFile/uis/UploadDbFile.js"]) if(@inputs.size == 0) %>
<%
  else
%>
<%= renderFrag(@toolIdStr, :wbToolHelpOverview,
      { :toolHelpOverview =>
        "
          <img src='/images/workbench/underConstruction_wikipedia_free_74x64.png' style='float:left; padding: 0px 4px 10px 4px; width:74px; height:64px;'>
          <div style='float: left; width: 288px; margin-top: 10px ; color: red;'>This tool is currently in review. Thus, the tool is currently only available to the authors, testers, and reviewers.</div>
          <span style='color: red;'>Prototype will be made available for evaluation as soon as possible.</span>
        "
      })
  %>
  <%# Cancel Button %>
  <%= renderFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :cancel} ]
      })
  %>
</form>
<%
  end
%>
