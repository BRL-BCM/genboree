<%
  require 'brl/genboree/rest/apiCaller'
  require 'brl/genboree/rest/helpers/databaseApiUriHelper'
  require 'brl/genboree/rest/helpers/fileApiUriHelper'
  require "brl/db/dbrc"
  require 'uri'
  require 'json'
  width = (@hasAccess ? 500 : 320)
  height = (@hasAccess ? 425 : 320)
%>
<div style="height: <%=height%>px; width: <%=width%>px; " class="wbDialog wbHelp" >
  <%# Tool Title %>
  <%= renderStaticFrag(@toolIdStr, :wbToolHelpTitle) %>
<%
  if(@hasAccess)
%>
  <%# Error Message if it exists %>
  <%= renderFrag(@toolIdStr, :wbErrorMsg, { :context => @context } ) if(@context['wbErrorMsg']) %>
  <%# Overview text %>
  <%= renderStaticFrag(@toolIdStr, :wbToolHelpOverview,
      { :toolHelpOverview =>
        "
          This tool will generate bigbed files for existing tracks in Genboree.
          You can either drag a track class or a track entity-list or a database (to generate bigbed files for all tracks within that class/entity-list/database) or drag tracks individually into &quot;Input Data&quot;.
          <br>&nbsp;<br>
          Each track will be associated with a checkbox which you can check to generate the bigbed file for that track. The value 'no file' will be associated with tracks that do not have bigbed files yet. A timestamp
          will be present for tracks that have bigbed files indicating the time the file was last generated.
          <br>&nbsp;<br>
          Note that ALL the tracks should come from the same database and the tool cannot be used to generate bigbed files for tracks on another host.
          <br>&nbsp;<br>
        "

      })
  %>
  <%# Input data help %>
  <%= renderStaticFrag(@toolIdStr, :wbToolInputInstructions,
      {
        :instructions       =>
        [
          'Drag the <u>Track(s)</u> and/or <u>Classes</u> and/or <u>Tracks Entity List(s)</u> and/or a <u>Database</u> into &quot;Input Data&quot;.',
        ],
        :types              => [ [ 'Tracks', 'min: 0 ; max: any' ], [ 'Class', 'min: 0 ; max: any' ], [ 'Track Entity List', 'min: 0 ; max: any' ], [ 'Database', 'min: 0 ; max: 1' ] ],
        :beEmpty            => false
      })
  %>
  <%# Tool-specific settings help %>
  <%= renderStaticFrag(@toolIdStr, :wbToolSettingsInstructions,
      {
        :instructions     =>
        [
          [ 'Submit', "Once you've reviewed the input tracks, click &quot;Submit&quot;."]
        ]
      })
  %>
  <%# Tool-specific References & attribution %>
  <%= renderStaticFrag(@toolIdStr, :wbToolRefs,
      {
        :references         =>  [
                                  [ 'Tool developed internally and integrated into the Workbench by Sameer Paithankar at <a href="http://brl.bcm.tmc.edu">BRL</a>.', nil ]
                                ]
      })
  %>
<%
  else # User does not have access
%>
<%= renderFrag(@toolIdStr, :wbToolHelpOverview,
      { :toolHelpOverview =>
        "
          <img src='/images/workbench/underConstruction_wikipedia_free_74x64.png' style='float:left; padding: 0px 4px 10px 4px; width:74px; height:64px;'>
          <div style='float: left; width: 288px; margin-top: 10px ; color: red;'>This tool is currently in review. Thus, the tool is currently only available to the authors, testers, and reviewers.</div>
          <span style='color: red;'>Prototype will be made available for evaluation as soon as possible.</span>
        "
      })
  %>
  <%# Cancel Button %>
  <%= renderFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :cancel} ]
      })
  %>
<%
  end
%>
</div>
