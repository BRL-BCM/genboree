<%# RENDER HTML %>
<%
    require 'brl/genboree/rest/helpers/databaseApiUriHelper'
    width = (@hasAccess ? 500 : 320)
    height = (@hasAccess ? 425 : 320)
    if(@inputs.size == 0)
      formTag = "<form id=\"wbDialogForm\" name=\"wbDialogForm\" action=\"wbDefault\" style=\"width: #{width}px; height: #{height}px;\" onsubmit=\"return UploadDbFile.submitJob(this) ; \" method=\"POST\" class=\"wbDialog wbForm\" enctype=\"multipart/form-data\">"
    else
      formTag = "<form id=\"wbDialogForm\" name=\"wbDialogForm\" action=\"wbDefault\" style=\"width: #{width}px; height: #{height}px;\" onsubmit=\"return submitToolJob(this);\" method=\"POST\" class=\"wbDialog wbForm\" >"
    end
%>
  <%= formTag %>
  <%# Tool Title %>
  <%= renderStaticFrag(@toolIdStr, :wbToolTitle) %>
<%
  if(@hasAccess)
%>
  <%# Overview text %>
  <%= renderStaticFrag(@toolIdStr, :wbToolOverview,
      { :toolOverview =>
        "
          This tool allows uploading of annotations as <i>Tracks</i> into a Genboree database. Currently supported
          formats include:
          <ul>
            <li><a href=\"http://genboree.org/java-bin/showHelp.jsp?topic=lffFileFormat\" target=\"_blank\">LFF</a></li>
            <li><a href=\"http://genome.ucsc.edu/goldenPath/help/wiggle.html\" target=\"_blank\">Wiggle (fixedStep/variableStep)</a></li>
            <li><a href=\"https://earray.chem.agilent.com/earray/helppages/index.htm#probe_file_formats_and_requirements_for_uploading.htm\" target=\"_blank\">Agilent Probes</a></li>
            <li><a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format2\" target=\"_blank\">Blat (PSL version 3)</a></li>
            <li><a href=\"http://perl.4ngs.com/2012/03/parse-blast-output-tabular-format/\">Blast (Tab delimited)</a></li>
            <li><a href=\"http://www.1000genomes.org/wiki/Analysis/Variant%20Call%20Format/vcf-variant-call-format-version-41\" target=\"_blank\">VCF</a></li>
            <li><a href=\"http://genome.ucsc.edu/goldenPath/help/bedgraph.html\" target=\"_blank\">BedGraph</a></li>
            <li>Pash 2.0.</li>
            <li><a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format1\" target=\"_blank\">Bed</a></li>
            <li><a href=\"http://genome.ucsc.edu/goldenPath/help/bigBed.html\" target=\"_blank\">BigBed</a></li>
            <li><a href=\"http://genome.ucsc.edu/goldenPath/help/bigWig.html\" target=\"_blank\">BigWig</a></li>
            <li><a href=\"http://www.sequenceontology.org/gff3.shtml\" target=\"_blank\">GFF3</a></li>
          </ul>
          <br>
          <b>Additional Info about tracks</b>:</br>
          A Track can generally be regarded as either a <i>Regions of Interest</i> (ROI) track or a <i>High Density Score</i> track. ROI tracks can be uploaded
          via heavy weight annotation formats such as LFF, GFF3 or BED which support additional annotation information for each record of data. Score tracks can be uploaded via bedGraph or wig (fwig/vwig) formats. These formats are ideal for uploading high density high volume score tracks since they only
          contain score information for genomic coordinates.
          <br>&nbsp;<br>
          <b>Special Notes</b>:
          <ul>
            <li><b>VCF</b>: The track 'type' for VCF will not be solicited from the user. Instead, sample name(s) from the VCF file will be used as track type.</li>
            <li><b>GFF3</b>: The 'Name' tag in the <i>attributes</i> field will be used to name the annotations. If 'Name' is absent, 'ID' will be used and if 'ID' is absent, 'Alias' will be used.
            If all three tags are missing, the landmark (chr:start-stop) will be used as name.</li>
            <li><b>BED/BedGraph/BigBed/BigWig</b>: You can upload files that are 0-based and half-open according to <a href=\"http://genome.ucsc.edu/FAQ/FAQformat.html#format1\" target=\"_blank\">UCSC</a> specifications or use the conventional 1 based and fully closed format like some of the other formats (LFF, GFF3, etc). Advanced users may also force the coordinate system with the provided option. This adjustment is intended to allow unconventional 1-based BED-like formats. BigWig is included in this category because files built with UCSC 'toBigWig' tools may be built from BED-like formats. However, this option will not alter BigWig coordinate systems when the original file is also a Wig.</li>
            <li><b>Skip non-assembly chromosomes</b>: Check to upload only those annotations that map to chromosomes/entrypoints found in the reference genome assembly (The genome assembly of the target database). If you uncheck this option and a chromosome is found that is not part of the assembly, your upload job will not complete successfully. You can upload custom chromosomes/entrypoints using the 'Upload Entrypoints' tool under Data/Entrypoints.</li>
            <li><b>Skip out-of-range annotations</b>: Check to upload only those annotations that are within the range of an entrypoint/chromosome. Any annotation that starts after the length of the chromosome or ends before the beginning of the chromosome will be removed.</li>
          </ul>
        "
      })
  %>
  <%# Input resource summary %>
  <%=
    renderFrag(@toolIdStr, :wbDialogSection,
    {
      :sectionTitle => "Input Data:",
      :sectionHtml =>
        renderFrag(@toolIdStr, :wbTrackOrFileListSummary, { :trackOrFileList => @inputs, :label => "Data File" } )
    })
  %>
  <%# Output database summary %>
  <%=
      renderFrag(@toolIdStr, :wbDialogSection,
      {
        :sectionTitle => "Output Location:",
        :sectionHtml => renderFrag(@toolIdStr, :wbDatabaseListSummary, { :databaseList => @outputs } )
      })
  %>
  <%# Tool-specific UI widgets user provides/reviews %>
  <%=
    widgets1 = []
    if(@inputs.size == 0)
        widgets1 =
                  [
                    { :id => 'wbContext', :type => :hidden },
                    { :id => 'uploadFile', :label => 'Select File', :type => :file },
                    { :id => 'subdirs', :type => :text , :value => "Raw Data Files", :hidden => true }
                  ]
    end
    widgets2 =
            [
              { :id => 'inputFormat', :label => 'Input Format', :type => :select, :onchange => "displayOptions(this.value)", :options =>
                {
                  :lff => { :label => 'LFF', :selected => true },
                  :wig => {:label => 'Wiggle (FixedStep/VariableStep)'},
                  :pash => { :label => 'Pash 2.0' },
                  :agilent => { :label => 'Agilent probes'},
                  :blast => { :label => 'Blast (Tab delemited)'},
                  :blat => { :label => 'Blat (PSL Version 3)'},
                  :vcf => { :label => 'VCF' },
                  :bedGraph => { :label => "BedGraph" },
                  :bed => { :label => "Bed" },
                  :bigBed => { :label => "BigBed" },
                  :bigWig => { :label => "BigWig" },
                  :gff3 => { :label => "GFF3" }
                }
              },
              { :id => 'trackClassName', :label => 'Track Class', :type => :text, :value => '', :hidden => true, :disabled => true},
              { :id => 'wigTrackName', :label => 'Track Name', :type => :gbTrackName, :defaultType => '', :defaultSubtype => '', :hideTrackName => true, :hidden => true},
              { :id => 'subtype', :label => 'Track SubType', :type => :text, :hidden => true, :value => "Variant", :disabled => true},
              { :id => 'skipChr', :type => :extCheckboxGroup, :label => "", :list => ['Skip non-assembly chromosomes'], :boxHeight => "25", :title => "Skip chromosomes/entrypoints not found in the reference genome asssembly" },
              { :id => 'skipOORAnnos', :type => :extCheckboxGroup, :checkFirstItem => 'false', :label => "", :list => ['Skip out-of-range annotations'], :boxHeight => "25", :title => "Skip annotations that are out of range with respect to the entrypoint/chromosome." },
              { :id => 'transformEncoding', :type => :extCheckboxGroup, :label => "", :list => {'Convert NON-ASCII files to ASCII before processing' => {'title' => "Convert NON-ASCII files to ASCII before processing. Only files from a selected list will be transformed. If the file cannot be transformed or is not in the selected list, the job will fail.", :checked => false } }, :boxHeight => "25", :title => "" },
              { :id => 'makeBigwig', :type => :checkbox, :label => 'Make Bigwig File', :hidden => true,
                :title => 'Make a bigwig file for easier viewing in the UCSC Genome Browser',
                :onclick => "makeBigwig(this);"
              },
              { :id => 'forceCoordSystem', :type => :checkbox, :label => 'Force Coordinate System', :hidden => true,
                :title => 'Provide a coordinate system for the given track annotations other than the default coordinate system used by the file format and/or the coordinate system determined by Genboree.',
                :onclick => "toggleCoordSystemGroup(this);"
              },
              { :id => 'coordSystem', :label => 'Coordinate System', :type => :extRadioGroup, :list => ['0 based and half open', '1 based and fully closed'], :hidden => true },
              { :id => 'advancedSettings', :type => :advancedSection,
                :width => '450px',
                :text => '(The default values for these settings are what will be used if you do not change them.)',
                :widgets =>
                [
                  { :id => 'histTracks', :label => 'Create histogram tracks?', :labelStyle => 'width:300px;', :type => :checkbox},
                  { :id => 'segAnalysis', :label => 'Perform segmentation Analysis?', :labelStyle => 'width:300px;', :type => :checkbox, :onclick => "toggleSegAnalysisOpts(this.checked)"},
                  { :id => 'minProbesPerSeg', :disabled => true, :label => 'Minimum # probes per segment', :labelStyle => 'width:300px;', :type => :text, :size => "6", :value => "2.0", :style => 'font-size: 80%'},
                  { :id => 'segLogRatio', :disabled => true, :label => 'Segment Log-Ratio Threshold', :labelStyle => 'width:300px;', :type => :text, :size => "6", :value => "2.0", :style => 'font-size: 80%'},
                  { :name => 'segAnalysisRadio', :disabled => true, :label => '. . . as # stdevs from global average log-ratio', :labelStyle => 'width:300px;', :type => :radio, :value => "stdev", :selected => true},
                  { :name => 'segAnalysisRadio', :disabled => true, :label => '. . . as minimum absolute threshold for mean log-ratio', :labelStyle => 'width:300px;', :type => :radio, :value => "absolute"}
                ],
                :hidden => true
              }
            ]
    widgets = widgets1 + widgets2
    renderFrag(@toolIdStr, :wbToolSettingsUI,
    {
      :sectionTitle => "Settings",
      :widgets => widgets
    })
  %>
  <%= renderStaticFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :submit }, { :type => :cancel} ]
      })
  %>
</form>
<%= WorkbenchFormHelper.renderInlineScriptFrag(["#{@genbConf.cacheDirBasePath}/javaScripts/progressUpload.js", "#{@genbConf.toolViewRoot}/uploadDbFile/uis/UploadDbFile.js"]) if(@inputs.size == 0) %>
<script type="text/javascript" >
Ext.QuickTips.init() ;
function toggleSegAnalysisOpts(checked)
{
  var minProbesPerSeg = Ext.get('minProbesPerSeg').dom ;
  var segLogRatio = Ext.get('segLogRatio').dom ;
  var segAnalysisRadio = document.getElementsByName('segAnalysisRadio') ;
  rbutton1 = segAnalysisRadio[0] ;
  rbutton2 = segAnalysisRadio[1] ;
  if(checked)
  {
    minProbesPerSeg.disabled = false ;
    segLogRatio.disabled = false ;
    rbutton1.disabled = false ;
    rbutton2.disabled = false ;
  }
  else
  {
    minProbesPerSeg.disabled = true ;
    segLogRatio.disabled = true ;
    rbutton1.disabled = true ;
    rbutton2.disabled = true ;
  }
}

function displayOptions(value)
{
  var lffType = Ext.get('lffType').dom ;
  var lffType = Ext.get('lffType').dom ;
  var lffSubType = Ext.get('lffSubType').dom ;
  var wigTracklabel = Ext.get("wigTrackName" + "Label") ;
  var trackClassName = Ext.get('trackClassName') ;
  //var classDom = Ext.get('trackClassName').dom ;
  var classDom = document.getElementById('trackClassName') ;
  var skipOORAnnos = document.getElementById('skipOORAnnos') ;
  var classLabel = Ext.get("trackClassName" + "Label") ;
  var advSet = Ext.get('advancedSettings') ;
  var advSetLabel = Ext.get('advancedSettingsLabel') ;
  //var subtypeDom = Ext.get('subtype').dom
  var subtypeDom = document.getElementById('subtype') ;
  var subtypeLabel = Ext.get('subtypeLabel') ;
  var subtype = Ext.get('subtype') ;
  var makeBigwig = Ext.get('makeBigwig') ;
  var makeBigwigLabel = Ext.get('makeBigwigLabel') ;

  if(value == 'blat' || value == 'blast' || value == 'pash' || value == 'wig' || value == 'bigWig' || value == 'agilent' || value == 'vcf' || value == 'bedGraph' || value == 'bed' || value == 'bigBed')
  {
    if(value == 'blat' || value == 'blast' || value == 'pash' || value == 'agilent' || value == 'vcf' || value == 'bed' || value == 'bigBed')
    {
      makeBigwig.setStyle('display', 'none') ;
      makeBigwigLabel.setStyle('display', 'none') ;
      classLabel.setStyle('display', '') ;
      classDom.disabled = false ;
      trackClassName.setStyle('display', '') ;
      if(value != 'vcf')
      {
        subtypeDom.disabled = true ;
        subtype.setStyle('display', 'none') ;
        subtypeLabel.setStyle('display', 'none') ;
      }
      if(value != 'agilent' && value != 'bed')
      {
        classDom.value = 'Hits' ;
        lffSubType.value = 'Hit' ;
      }
      if(value == 'pash')
      {
        lffType.value = 'Pash' ;
      }
      else if(value == 'blast')
      {
        lffType.value = 'Blast' ;
      }
      else if(value == 'agilent')
      {
        lffType.value = 'Agilent' ;
        lffSubType.value = 'Probe' ;
        classDom.value = 'Agilent' ;
      }
      else if(value == 'vcf')
      {
        subtypeDom.disabled = false ;
        subtype.setStyle('display', '') ;
        subtypeLabel.setStyle('display', '') ;
        subtype.value = 'Variant' ;
        classDom.value = 'VCF-SNPs' ;
        wigTracklabel.setStyle('display', 'none') ;
        lffType.style.visibility = 'hidden' ;
        lffType.disabled = true ;
        lffSubType.style.visibility = 'hidden' ;
        lffSubType.disabled = true ;
      }
      else if(value == 'bed')
      {
        lffType.value = 'Bed' ;
        classDom.value = 'BedClass' ;
        lffSubType.value = 'Track' ;
      }
      else if(value == 'bigBed')
      {
        lffType.value = 'BigBed' ;
        classDom.value = 'BigBedClass' ;
        lffSubType.value = 'Track' ;
      }
      else
      {
        lffType.value = 'Blat' ;
      }
      skipOORAnnos.style.visibility = 'visible' ;
    }
    else if(value == 'wig' || value == 'bedGraph' || value == 'bigWig')
    {
      classLabel.setStyle('display', 'none') ;
      classDom.disabled = true ;
      trackClassName.setStyle('display', 'none') ;
      lffSubType.value = 'Track' ;
      lffType.value = 'score' ;
      subtypeDom.disabled = true ;
      subtype.setStyle('display', 'none') ;
      subtypeLabel.setStyle('display', 'none') ;
      if(value == 'wig' || value == 'bigWig')
      {
        skipOORAnnos.style.visibility = 'hidden' ;
      }
      else
      {
        skipOORAnnos.style.visibility = 'visible' ;
      }
      if(value == 'wig')
      {
        makeBigwig.setStyle('display', '') ;
        makeBigwigLabel.setStyle('display', '') ;
      }
      else
      {
        makeBigwig.setStyle('display', 'none') ;
        makeBigwigLabel.setStyle('display', 'none') ;
      }
    }
    if(value != 'vcf' && value != 'gff3')
    {
      lffType.disabled = false ;
      lffSubType.disabled = false ;
      lffType.style.visibility = '' ;
      lffSubType.style.visibility = '' ;
      wigTracklabel.setStyle('display', '') ;
    }
    // Toggle the Advanced settings for agilent
    if(value == 'agilent')
    {
      advSetLabel.setStyle('display', '') ;
    }
    else
    {
      advSetLabel.setStyle('display', 'none') ;
    }
  }
  else // only lff and gff3
  {
    skipOORAnnos.style.visibility = 'visible' ;
    if(value == 'gff3')
    {
      classLabel.setStyle('display', '') ;
      classDom.disabled = false ;
      classDom.value = "GFF3Class" ;
      trackClassName.setStyle('display', '') ;
    }
    else //lff
    {
      classLabel.setStyle('display', 'none') ;
    }
    lffType.style.visibility = 'hidden' ;
    lffType.disabled = true ;
    lffSubType.style.visibility = 'hidden' ;
    lffSubType.disabled = true ;
    wigTracklabel.setStyle('display', 'none') ;
    advSetLabel.setStyle('display', 'none') ;
    subtypeDom.disabled = true ;
    subtype.setStyle('display', 'none') ;
    subtypeLabel.setStyle('display', 'none') ;
    makeBigwig.setStyle('display', 'none') ;
    makeBigwigLabel.setStyle('display', 'none') ;
  }
  /* For bed, bedGraph, and big formats, enable option to override coordinate system */
  var forceCoordSystemLabel = document.getElementById('forceCoordSystemLabel') ;
  var forceCoordSystemBox = document.getElementById('forceCoordSystem') ;
  if(value == 'bed' || value == 'bedGraph' || value == 'bigWig' || value == 'bigBed')
  {
    forceCoordSystemLabel.removeAttribute('style') ;
    forceCoordSystemBox.setAttribute('style', 'visibility: visible; ') ;
  }
  else
  {
    forceCoordSystemLabel.setAttribute('style', 'display:none;') ;
    forceCoordSystemBox.setAttribute('style', 'visibility: visible; display:none; ;') ;
    forceCoordSystemBox.checked = false ;
    hideCoordSystemGroup() ;
  }
}

function hideCoordSystemGroup()
{
  var coordSystemRadioLabel = document.getElementById("coordSystemLabel") ; // "Label" appended by Genboree to widgets with a label
  var coordSystemRadio = Ext.getCmp('radioGroup_coordSystem') ; // "radioGroup_" prepended for extRadioGroup seen in wbWidgets.frag.rhtml
  coordSystemRadioLabel.setAttribute('style', 'display:none;') ;
  coordSystemRadio.hide() ;
  coordSystemRadio.disabled = true ;
}

function toggleCoordSystemGroup(forceCoordSystemBox)
{
  var coordSystemRadioLabel = document.getElementById("coordSystemLabel") ; // "Label" appended by Genboree to widgets with a label
  var coordSystemRadio = Ext.getCmp('radioGroup_coordSystem') ; // "radioGroup_" prepended for extRadioGroup seen in wbWidgets.frag.rhtml
  if(forceCoordSystemBox.checked)
  {
    coordSystemRadioLabel.removeAttribute('style') ;
    coordSystemRadio.show() ;
    coordSystemRadio.disabled = false ;
  }
  else
  {
    hideCoordSystemGroup() ;
  }
}

</script>
<%
  else
%>
<%= renderFrag(@toolIdStr, :wbToolHelpOverview,
      { :toolHelpOverview =>
        "
          <img src='/images/workbench/underConstruction_wikipedia_free_74x64.png' style='float:left; padding: 0px 4px 10px 4px; width:74px; height:64px;'>
          <div style='float: left; width: 288px; margin-top: 10px ; color: red;'>This tool is currently in review. Thus, the tool is currently only available to the authors, testers, and reviewers.</div>
          <span style='color: red;'>Prototype will be made available for evaluation as soon as possible.</span>
        "
      })
  %>
  <%# Cancel Button %>
  <%= renderFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :cancel} ]
      })
  %>
</form>
<%
  end
%>
