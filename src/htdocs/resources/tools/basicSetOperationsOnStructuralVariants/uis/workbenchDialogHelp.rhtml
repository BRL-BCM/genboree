<%# RENDER HTML %>
<%
  require 'brl/genboree/rest/apiCaller'
  require 'brl/genboree/rest/helpers/trackApiUriHelper'
  require 'brl/genboree/rest/helpers/databaseApiUriHelper'
  require 'brl/genboree/genboreeUtil'
  trackApiHelper = BRL::Genboree::REST::Helpers::TrackApiUriHelper.new(@dbu, @genbConf)
  width = (@hasAccess ? 500 : 320)
  height = (@hasAccess ? 425 : 320)
  formTag = "<div style=\"height: #{height}px; width: #{width}px; \" class=\"wbDialog wbHelp\" >"
%>
<%= formTag %>
  <%# Tool Title %>
  <%= renderStaticFrag(@toolIdStr, :wbToolHelpTitle) %>
  <%# Error Message if it exists %>
  <%= renderFrag(@toolIdStr, :wbErrorMsg, { :context => @context } ) if(@context['wbErrorMsg']) %>
<%
  if(@hasAccess)
%>
  <%# Overview text %>
  <%= renderStaticFrag(@toolIdStr, :wbToolHelpOverview,
      { :toolHelpOverview =>
        "
          This tools enables a user to perform basic set operations on structural variants determined with the help of the \"Structural Variant Detection\" tool.
          <br>&nbsp;<br>
          A user needs to drag a directory corresponding to the result of a breakpoint calling operation into the \"Input Data\" area.
          The user has the option of specifying one or multiple target breakpoint experiments, by dragging the corresponding directories into the \"Input Data\" area.
          <br>&nbsp;<br>
          We recalled breakpoints on a subset of the 1000 genome data corresponding to mate pair experiments, using Breakout.
          A user has the option to consider the 1000 Genomes breakpoints as another target of the comparison.
          The basic set operations that can be performed are intersection and difference.
          <br>&nbsp;<br>
          A user can specify the minimum number of targets that the input track overlap with/differs from.
          Finally, a user needs to specify the output database to store the results in.

        "
      })
  %>
  <%# Input data help %>
  <%= renderStaticFrag(@toolIdStr, :wbToolInputInstructions,
      {
        :instructions       =>
        [
          "Drag one or more output folders generated by the 'Structural Variant Detection' tool into &quot;Input Data&quot;.",
          "Optionallly, you can also drag over one or more Genomic Feature track(s)",
        ],
        :types              => [ [ 'Files Dir', 'min: 1 ; max: any' ], [ 'Tracks', 'min: 0 ; max: any' ] ],
        :beEmpty            => true
      })
  %>
  <%# Output resource summary %>
  <%= renderStaticFrag(@toolIdStr, :wbToolOutputInstructions,
      {
        :instructions       => [  'Drag 1 destination <u>database</u> into &quot;Output Targets&quot;. The results data will end up under the <u>Structural Variation</u> folder in the <u>Files</u> area of your output database.',
                                  'Within that folder, your <span class="wbHelpMono">Analysis Name</span> will be used as a sub-folder under the sub-folder <u>BreakPoint Operations</u>..' ],
        :types              => [ [ 'Database', 'min: 1 ; max: 1' ] ], # Can also give db/{db}/Files as the output destination
        :beEmpty            => false
      })
  %>
  <%# Tool-specific settings help %>
  <%= renderStaticFrag(@toolIdStr, :wbToolSettingsInstructions,
      {
        :instructions     =>
        [
          [ 'Analysis Name', "The top-level output folder used to organize related Cancer Analysis results."],
          [ 'Radius', "Radius for overlap with genomic features Note the radius for the structural variant intersection can be inferred as the maximum of all maxInsertSize avp for all input structural Variant tracks by the intersection tool"],
          [ 'TGP Breakpoints', "Use 1000 genomes breakpoints"],
          [ 'Set Operations', "Intersection/Difference"],
          [ 'Minimum Operations', "Minimum number of tracks/sets to intersect/differ with; default 1"],
          [ 'Upload as track?', "Upload Results Lff File as Track"],
          [ 'Submit', "Once you've reviewed the input tracks, the output destination database, and your comparison settings, click &quot;Submit&quot;." ]
        ]
      })
  %>
  <%# Tool-specific References & attribution %>
  <%= renderStaticFrag(@toolIdStr, :wbToolRefs,
      {
        :references         =>  [
                                  [ 'Tool developed internally by Arpit Tandon and Christian Coarfa; integrated into the Workbench by Sameer Paithankar and Andrew Jackson at <a href="http://brl.bcm.tmc.edu">BRL</a>.', nil ]
                                ]
      })
  %>
<%
  else # User does not have access
%>
<%= renderFrag(@toolIdStr, :wbToolHelpOverview,
      { :toolHelpOverview =>
        "
         <img src='/images/workbench/underConstruction_wikipedia_free_74x64.png' style='float:left; padding: 0px 4px 10px 4px; width:74px; height:64px;'>
          <div style='float: left; width: 288px; margin-top: 10px ; color: red;'>This tool is currently in review. Thus, the tool is currently only available to the authors, testers, and reviewers.</div>
          <span style='color: red;'>Prototype will be made available for evaluation when ready.</span>
        "
      })
  %>
  <%# Cancel Button %>
  <%= renderFrag(@toolIdStr, :wbToolButtons,
      {
        :buttons => [ { :type => :cancel} ]
      })
  %>
<%
  end
%>
</div>
